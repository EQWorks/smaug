service: smaug

provider:
  name: aws
  runtime: python3.8
  memorySize: 1024
  region: us-east-1
  logRetentionInDays: 731  # ~2 years
  vpc: # vpc-70658509 | EQ-DC-Tunnel
    securityGroupIds:
      - sg-081b437d # api-gateway-dc
    subnetIds:
      - subnet-b59ae9fe # EQ-DC-Lambda Public 1A
      - subnet-df12bb82 # EQ-DC-Lambda Public 1B
  environment:
    AWS_LAMBDA_DEPLOYED: true
    REDIS_URL:
      # cloudformation functions to form redis://<host>:<port>
      "Fn::Join": [
        "",
        [
          "redis://",
          "Fn::Join": [
            ":",
            [
              "Fn::GetAtt": [RedisCluster, RedisEndpoint.Address],
              "Fn::GetAtt": [RedisCluster, RedisEndpoint.Port]
            ]
          ]
        ]
      ]

package:
  exclude:
    - .github/**
    - .vscode/**
    - node_modules/**
    - package.json
    - yarn.lock
    - Pipfile.lock

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: non-linux

functions:
  increment:
    handler: handler.increment
    timeout: 6
  get:
    handler: handler.get
    timeout: 6

resources:
  Resources:
    # redis resource configured through cloudformation, without explicit manual work
    RedisCluster:
      Type: AWS::ElastiCache::CacheCluster
      Properties:
        ClusterName: ${self:service}-${opt:stage, self:provider.stage}
        AutoMinorVersionUpgrade: true
        CacheNodeType: cache.t2.micro
        Engine: redis
        NumCacheNodes: 1
        # this equates to the provider.vpc.subnetIds
        CacheSubnetGroupName: redis-public-lambda
        VpcSecurityGroupIds:
          - sg-52345126
